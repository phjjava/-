<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jp.dao.InstructionDao" >
  <resultMap id="BaseResultMap" type="com.jp.entity.Instruction" >
    <id column="instructionid" property="instructionid" jdbcType="VARCHAR" />
    <result column="createid" property="createid" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateid" property="updateid" jdbcType="VARCHAR" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="deleteflag" property="deleteflag" jdbcType="TINYINT" />
    <result column="imgurl" property="imgurl" jdbcType="VARCHAR" />
    <result column="familyid" property="familyid" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jp.entity.Instruction" extends="BaseResultMap" >
    <result column="instructioncontent" property="instructioncontent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      instructionid, createid, createtime, updateid, updatetime, deleteflag, imgurl, familyid,instructioncontent
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <sql id="Blob_Column_List" >
    instructioncontent
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.jp.entity.InstructionQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jp_instruction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jp.entity.InstructionQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jp_instruction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    instructionid,createid,createtime,updateid,updatetime,deleteflag,imgurl,familyid,instructioncontent
    ,
    <include refid="Blob_Column_List" />
    from jp_instruction
    where instructionid = #{instructionid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from jp_instruction
    where instructionid = #{instructionid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jp.entity.InstructionQuery" >
    delete from jp_instruction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jp.entity.Instruction" >
    insert into jp_instruction (instructionid, createid, createtime, 
      updateid, updatetime, deleteflag, 
      imgurl, familyid, instructioncontent
      )
    values (#{instructionid,jdbcType=VARCHAR}, #{createid,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updateid,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}, #{deleteflag,jdbcType=TINYINT}, 
      #{imgurl,jdbcType=VARCHAR}, #{familyid,jdbcType=VARCHAR}, #{instructioncontent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jp.entity.Instruction" >
    insert into jp_instruction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="instructionid != null" >
        instructionid,
      </if>
      <if test="createid != null" >
        createid,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updateid != null" >
        updateid,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="deleteflag != null" >
        deleteflag,
      </if>
      <if test="imgurl != null" >
        imgurl,
      </if>
      <if test="familyid != null" >
        familyid,
      </if>
      <if test="instructioncontent != null" >
        instructioncontent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="instructionid != null" >
        #{instructionid,jdbcType=VARCHAR},
      </if>
      <if test="createid != null" >
        #{createid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateid != null" >
        #{updateid,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteflag != null" >
        #{deleteflag,jdbcType=TINYINT},
      </if>
      <if test="imgurl != null" >
        #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="familyid != null" >
        #{familyid,jdbcType=VARCHAR},
      </if>
      <if test="instructioncontent != null" >
        #{instructioncontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jp.entity.InstructionQuery" resultType="java.lang.Integer" >
    select count(*) from jp_instruction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jp_instruction
    <set >
      <if test="record.instructionid != null" >
        instructionid = #{record.instructionid,jdbcType=VARCHAR},
      </if>
      <if test="record.createid != null" >
        createid = #{record.createid,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateid != null" >
        updateid = #{record.updateid,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteflag != null" >
        deleteflag = #{record.deleteflag,jdbcType=TINYINT},
      </if>
      <if test="record.imgurl != null" >
        imgurl = #{record.imgurl,jdbcType=VARCHAR},
      </if>
      <if test="record.familyid != null" >
        familyid = #{record.familyid,jdbcType=VARCHAR},
      </if>
      <if test="record.instructioncontent != null" >
        instructioncontent = #{record.instructioncontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update jp_instruction
    set instructionid = #{record.instructionid,jdbcType=VARCHAR},
      createid = #{record.createid,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updateid = #{record.updateid,jdbcType=VARCHAR},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      deleteflag = #{record.deleteflag,jdbcType=TINYINT},
      imgurl = #{record.imgurl,jdbcType=VARCHAR},
      familyid = #{record.familyid,jdbcType=VARCHAR},
      instructioncontent = #{record.instructioncontent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jp_instruction
    set instructionid = #{record.instructionid,jdbcType=VARCHAR},
      createid = #{record.createid,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updateid = #{record.updateid,jdbcType=VARCHAR},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      deleteflag = #{record.deleteflag,jdbcType=TINYINT},
      imgurl = #{record.imgurl,jdbcType=VARCHAR},
      familyid = #{record.familyid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="java.lang.String" >
    update jp_instruction
    <set >
      <if test="createid != null" >
        createid = #{createid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateid != null" >
        updateid = #{updateid,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteflag != null" >
        deleteflag = #{deleteflag,jdbcType=TINYINT},
      </if>
      <if test="imgurl != null" >
        imgurl = #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="familyid != null" >
        familyid = #{familyid,jdbcType=VARCHAR},
      </if>
      <if test="instructioncontent != null" >
        instructioncontent = #{instructioncontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where instructionid = #{instructionid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jp.entity.Instruction" >
    update jp_instruction
    set createid = #{createid,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updateid = #{updateid,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      deleteflag = #{deleteflag,jdbcType=TINYINT},
      imgurl = #{imgurl,jdbcType=VARCHAR},
      familyid = #{familyid,jdbcType=VARCHAR},
      instructioncontent = #{instructioncontent,jdbcType=LONGVARCHAR}
    where instructionid = #{instructionid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jp.entity.Instruction" >
    update jp_instruction
    set createid = #{createid,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updateid = #{updateid,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      deleteflag = #{deleteflag,jdbcType=TINYINT},
      imgurl = #{imgurl,jdbcType=VARCHAR},
      familyid = #{familyid,jdbcType=VARCHAR}
    where instructionid = #{instructionid,jdbcType=VARCHAR}
  </update>
</mapper>