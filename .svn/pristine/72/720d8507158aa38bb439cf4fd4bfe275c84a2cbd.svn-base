<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jp.dao.UseralbumDao" >
  <resultMap id="BaseResultMap" type="com.jp.entity.Useralbum" >
    <id column="userid" property="userid" jdbcType="VARCHAR" />
    <id column="albumid" property="albumid" jdbcType="VARCHAR" />
    <result column="albumname" property="albumname" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="deleteflag" property="deleteflag" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="createid" property="createid" jdbcType="VARCHAR" />
    <result column="updateid" property="updateid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      userid, albumid, albumname, type, deleteflag, sort, createtime, updatetime, remark, 
      createid, updateid
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jp.entity.UseralbumQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jp_useralbum
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.jp.entity.UseralbumKey" >
    select 
    userid,albumid,albumname,type,deleteflag,sort,createtime,updatetime,remark,createid,updateid
    from jp_useralbum
    where userid = #{userid,jdbcType=VARCHAR}
      and albumid = #{albumid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.jp.entity.UseralbumKey" >
    delete from jp_useralbum
    where userid = #{userid,jdbcType=VARCHAR}
      and albumid = #{albumid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jp.entity.UseralbumQuery" >
    delete from jp_useralbum
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jp.entity.Useralbum" >
    insert into jp_useralbum (userid, albumid, albumname, 
      type, deleteflag, sort, 
      createtime, updatetime, remark, 
      createid, updateid)
    values (#{userid,jdbcType=VARCHAR}, #{albumid,jdbcType=VARCHAR}, #{albumname,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{deleteflag,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{createid,jdbcType=VARCHAR}, #{updateid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jp.entity.Useralbum" >
    insert into jp_useralbum
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="albumid != null" >
        albumid,
      </if>
      <if test="albumname != null" >
        albumname,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="deleteflag != null" >
        deleteflag,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createid != null" >
        createid,
      </if>
      <if test="updateid != null" >
        updateid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="albumid != null" >
        #{albumid,jdbcType=VARCHAR},
      </if>
      <if test="albumname != null" >
        #{albumname,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="deleteflag != null" >
        #{deleteflag,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createid != null" >
        #{createid,jdbcType=VARCHAR},
      </if>
      <if test="updateid != null" >
        #{updateid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jp.entity.UseralbumQuery" resultType="java.lang.Integer" >
    select count(*) from jp_useralbum
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jp_useralbum
    <set >
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.albumid != null" >
        albumid = #{record.albumid,jdbcType=VARCHAR},
      </if>
      <if test="record.albumname != null" >
        albumname = #{record.albumname,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.deleteflag != null" >
        deleteflag = #{record.deleteflag,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createid != null" >
        createid = #{record.createid,jdbcType=VARCHAR},
      </if>
      <if test="record.updateid != null" >
        updateid = #{record.updateid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jp_useralbum
    set userid = #{record.userid,jdbcType=VARCHAR},
      albumid = #{record.albumid,jdbcType=VARCHAR},
      albumname = #{record.albumname,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      deleteflag = #{record.deleteflag,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      createid = #{record.createid,jdbcType=VARCHAR},
      updateid = #{record.updateid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jp.entity.Useralbum" >
    update jp_useralbum
    <set >
      <if test="albumname != null" >
        albumname = #{albumname,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="deleteflag != null" >
        deleteflag = #{deleteflag,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createid != null" >
        createid = #{createid,jdbcType=VARCHAR},
      </if>
      <if test="updateid != null" >
        updateid = #{updateid,jdbcType=VARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=VARCHAR}
      and albumid = #{albumid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jp.entity.Useralbum" >
    update jp_useralbum
    set albumname = #{albumname,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      deleteflag = #{deleteflag,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      createid = #{createid,jdbcType=VARCHAR},
      updateid = #{updateid,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=VARCHAR}
      and albumid = #{albumid,jdbcType=VARCHAR}
  </update>
  <select id="selectUseralbum" parameterType="java.lang.String" resultType="com.jp.entity.Useralbum">
	SELECT
	ablum.* ,a.imgurl,b.photoNumbers
		FROM
			jp_useralbum ablum
		LEFT JOIN (
			SELECT
				photo.*, max(createtime)
			FROM
				jp_userphoto photo
			GROUP BY
				photo.albumid
		) a ON ablum.albumid = a.albumid
		LEFT JOIN (
	        SELECT
		       count(photoNum.imgurl) as photoNumbers,photoNum.albumid
	        FROM
		       jp_userphoto photoNum
	        GROUP BY
		       photoNum.albumid

        )b ON ablum.albumid = b.albumid
		where ablum.userid = #{userid,jdbcType=VARCHAR}
		order BY createtime DESC
 </select>
</mapper>