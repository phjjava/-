<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jp.dao.EventDao" >
  <resultMap id="BaseResultMap" type="com.jp.entity.Event" >
    <id column="eventid" property="eventid" jdbcType="VARCHAR" />
    <result column="eventtitle" property="eventtitle" jdbcType="VARCHAR" />
    <result column="deleteflag" property="deleteflag" jdbcType="INTEGER" />
    <result column="createid" property="createid" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateid" property="updateid" jdbcType="VARCHAR" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="createname" property="createname" jdbcType="VARCHAR" />
    <result column="imgurl" property="imgurl" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="familyid" property="familyid" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jp.entity.Event" extends="BaseResultMap" >
    <result column="eventcontent" property="eventcontent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      eventid, eventtitle, deleteflag, createid, createtime, updateid, updatetime, createname, 
      imgurl, type, familyid,eventcontent
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <sql id="Blob_Column_List" >
    eventcontent
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.jp.entity.EventQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from jp_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jp.entity.EventQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jp_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    eventid,eventtitle,deleteflag,createid,createtime,updateid,updatetime,createname,imgurl,type,familyid,eventcontent
    ,
    <include refid="Blob_Column_List" />
    from jp_event
    where eventid = #{eventid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from jp_event
    where eventid = #{eventid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jp.entity.EventQuery" >
    delete from jp_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jp.entity.Event" >
    insert into jp_event (eventid, eventtitle, deleteflag, 
      createid, createtime, updateid, 
      updatetime, createname, imgurl, 
      type, familyid, eventcontent
      )
    values (#{eventid,jdbcType=VARCHAR}, #{eventtitle,jdbcType=VARCHAR}, #{deleteflag,jdbcType=INTEGER}, 
      #{createid,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{updateid,jdbcType=VARCHAR}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{createname,jdbcType=VARCHAR}, #{imgurl,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{familyid,jdbcType=VARCHAR}, #{eventcontent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jp.entity.Event" >
    insert into jp_event
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eventid != null" >
        eventid,
      </if>
      <if test="eventtitle != null" >
        eventtitle,
      </if>
      <if test="deleteflag != null" >
        deleteflag,
      </if>
      <if test="createid != null" >
        createid,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updateid != null" >
        updateid,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="createname != null" >
        createname,
      </if>
      <if test="imgurl != null" >
        imgurl,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="familyid != null" >
        familyid,
      </if>
      <if test="eventcontent != null" >
        eventcontent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eventid != null" >
        #{eventid,jdbcType=VARCHAR},
      </if>
      <if test="eventtitle != null" >
        #{eventtitle,jdbcType=VARCHAR},
      </if>
      <if test="deleteflag != null" >
        #{deleteflag,jdbcType=INTEGER},
      </if>
      <if test="createid != null" >
        #{createid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateid != null" >
        #{updateid,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createname != null" >
        #{createname,jdbcType=VARCHAR},
      </if>
      <if test="imgurl != null" >
        #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="familyid != null" >
        #{familyid,jdbcType=VARCHAR},
      </if>
      <if test="eventcontent != null" >
        #{eventcontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jp.entity.EventQuery" resultType="java.lang.Integer" >
    select count(*) from jp_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jp_event
    <set >
      <if test="record.eventid != null" >
        eventid = #{record.eventid,jdbcType=VARCHAR},
      </if>
      <if test="record.eventtitle != null" >
        eventtitle = #{record.eventtitle,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteflag != null" >
        deleteflag = #{record.deleteflag,jdbcType=INTEGER},
      </if>
      <if test="record.createid != null" >
        createid = #{record.createid,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateid != null" >
        updateid = #{record.updateid,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createname != null" >
        createname = #{record.createname,jdbcType=VARCHAR},
      </if>
      <if test="record.imgurl != null" >
        imgurl = #{record.imgurl,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.familyid != null" >
        familyid = #{record.familyid,jdbcType=VARCHAR},
      </if>
      <if test="record.eventcontent != null" >
        eventcontent = #{record.eventcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update jp_event
    set eventid = #{record.eventid,jdbcType=VARCHAR},
      eventtitle = #{record.eventtitle,jdbcType=VARCHAR},
      deleteflag = #{record.deleteflag,jdbcType=INTEGER},
      createid = #{record.createid,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updateid = #{record.updateid,jdbcType=VARCHAR},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      createname = #{record.createname,jdbcType=VARCHAR},
      imgurl = #{record.imgurl,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      familyid = #{record.familyid,jdbcType=VARCHAR},
      eventcontent = #{record.eventcontent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jp_event
    set eventid = #{record.eventid,jdbcType=VARCHAR},
      eventtitle = #{record.eventtitle,jdbcType=VARCHAR},
      deleteflag = #{record.deleteflag,jdbcType=INTEGER},
      createid = #{record.createid,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updateid = #{record.updateid,jdbcType=VARCHAR},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      createname = #{record.createname,jdbcType=VARCHAR},
      imgurl = #{record.imgurl,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      familyid = #{record.familyid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="java.lang.String" >
    update jp_event
    <set >
      <if test="eventtitle != null" >
        eventtitle = #{eventtitle,jdbcType=VARCHAR},
      </if>
      <if test="deleteflag != null" >
        deleteflag = #{deleteflag,jdbcType=INTEGER},
      </if>
      <if test="createid != null" >
        createid = #{createid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateid != null" >
        updateid = #{updateid,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createname != null" >
        createname = #{createname,jdbcType=VARCHAR},
      </if>
      <if test="imgurl != null" >
        imgurl = #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="familyid != null" >
        familyid = #{familyid,jdbcType=VARCHAR},
      </if>
      <if test="eventcontent != null" >
        eventcontent = #{eventcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where eventid = #{eventid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jp.entity.Event" >
    update jp_event
    set eventtitle = #{eventtitle,jdbcType=VARCHAR},
      deleteflag = #{deleteflag,jdbcType=INTEGER},
      createid = #{createid,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updateid = #{updateid,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      createname = #{createname,jdbcType=VARCHAR},
      imgurl = #{imgurl,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      familyid = #{familyid,jdbcType=VARCHAR},
      eventcontent = #{eventcontent,jdbcType=LONGVARCHAR}
    where eventid = #{eventid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jp.entity.Event" >
    update jp_event
    set eventtitle = #{eventtitle,jdbcType=VARCHAR},
      deleteflag = #{deleteflag,jdbcType=INTEGER},
      createid = #{createid,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updateid = #{updateid,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      createname = #{createname,jdbcType=VARCHAR},
      imgurl = #{imgurl,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      familyid = #{familyid,jdbcType=VARCHAR}
    where eventid = #{eventid,jdbcType=VARCHAR}
  </update>
  <update id="batchDelete">
      <foreach collection="array" item="item" index="index" separator=";">
	     update  jp_event 
	     set deleteflag = 1
	     where eventid = #{item,jdbcType=VARCHAR}
	 </foreach>
  </update>
  <select id="selecteventread" parameterType="com.jp.entity.Event" resultType="com.jp.entity.Event">
	SELECT
		eread.readNum,
		e.eventid, e.eventtitle, e.deleteflag, e.createid, e.createtime, e.updateid, e.updatetime, 
		e.createname, e.imgurl, e.type, e.familyid, e.eventcontent
	FROM
		jp_event e
	LEFT JOIN (
		SELECT
			count(id) AS readNum,
			eread.eventid
		FROM
			jp_eventread eread
		GROUP BY
			eread.eventid
	) eread ON eread.eventid = e.eventid
	where e.familyid = #{familyid,jdbcType=VARCHAR}
	and e.deleteflag = 0
  </select>
  
  <select id="getEventList" parameterType="map" resultType="com.jp.entity.Event">
		select * from jp_event where familyid= #{familyid,jdbcType=VARCHAR}
		and deleteflag=0 order by type desc,updatetime desc
		<if test="count != null">
			limit ${count}
		</if>
		<if test="start != null">
			offset ${start}
		</if>
	</select>
</mapper>