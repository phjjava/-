<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jp.dao.UsercontentDao">
	<resultMap id="BaseResultMap"
		type="com.jp.entity.Usercontent">
		<id column="userid" property="userid" jdbcType="VARCHAR" />
		<result column="createid" property="createid"
			jdbcType="VARCHAR" />
		<result column="updateid" property="updateid"
			jdbcType="VARCHAR" />
		<result column="createtime" property="createtime"
			jdbcType="TIMESTAMP" />
		<result column="updatetime" property="updatetime"
			jdbcType="TIMESTAMP" />
		<result column="imgurl" property="imgurl" jdbcType="VARCHAR" />
		<result column="issee" property="issee" jdbcType="INTEGER" />
		<result column="readcount" property="readcount"
			jdbcType="INTEGER" />
		<result column="sort" property="sort" jdbcType="INTEGER" />
		<result column="familyid" property="familyid"
			jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs"
		type="com.jp.entity.Usercontent" extends="BaseResultMap">
		<result column="content" property="content"
			jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<if test="fields == null">
			userid,content, createid, updateid, createtime,
			updatetime, imgurl, issee,
			readcount,sort, familyid
		</if>
		<if test="fields != null">
			${fields}
		</if>
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	<select id="selectByExampleWithBLOBs"
		resultMap="ResultMapWithBLOBs"
		parameterType="com.jp.entity.UsercontentExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from jp_usercontent
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.jp.entity.UsercontentExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from jp_usercontent
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="startRow != null">
			limit #{startRow} , #{pageSize}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.String">
		select
		userid,createid,updateid,createtime,updatetime,imgurl,issee,readcount,sort,familyid,content
		,
		<include refid="Blob_Column_List" />
		from jp_usercontent
		where userid = #{userid,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		jp_usercontent
		where userid = #{userid,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.jp.entity.UsercontentExample">
		delete from jp_usercontent
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.jp.entity.Usercontent">
		insert into jp_usercontent
		(userid, createid, updateid,
		createtime, updatetime, imgurl,
		issee,
		readcount, sort,familyid,
		content)
		values (#{userid,jdbcType=VARCHAR},
		#{createid,jdbcType=VARCHAR},
		#{updateid,jdbcType=VARCHAR},
		#{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP},
		#{imgurl,jdbcType=VARCHAR},
		#{issee,jdbcType=INTEGER},
		#{readcount,jdbcType=INTEGER},#{sort,jdbcType=INTEGER},
		#{familyid,jdbcType=VARCHAR},
		#{content,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.jp.entity.Usercontent">
		insert into jp_usercontent
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				userid,
			</if>
			<if test="createid != null">
				createid,
			</if>
			<if test="updateid != null">
				updateid,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
			<if test="updatetime != null">
				updatetime,
			</if>
			<if test="imgurl != null">
				imgurl,
			</if>
			<if test="issee != null">
				issee,
			</if>
			<if test="readcount != null">
				readcount,
			</if>
			<if test="sort != null">
				sort,
			</if>
			<if test="familyid != null">
				familyid,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				#{userid,jdbcType=VARCHAR},
			</if>
			<if test="createid != null">
				#{createid,jdbcType=VARCHAR},
			</if>
			<if test="updateid != null">
				#{updateid,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				#{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="imgurl != null">
				#{imgurl,jdbcType=VARCHAR},
			</if>
			<if test="issee != null">
				#{issee,jdbcType=INTEGER},
			</if>
			<if test="readcount != null">
				#{readcount,jdbcType=INTEGER},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=INTEGER},
			</if>
			<if test="familyid != null">
				#{familyid,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.jp.entity.UsercontentExample"
		resultType="java.lang.Integer">
		select count(*) from jp_usercontent
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update jp_usercontent
		<set>
			<if test="record.userid != null">
				userid = #{record.userid,jdbcType=VARCHAR},
			</if>
			<if test="record.createid != null">
				createid = #{record.createid,jdbcType=VARCHAR},
			</if>
			<if test="record.updateid != null">
				updateid = #{record.updateid,jdbcType=VARCHAR},
			</if>
			<if test="record.createtime != null">
				createtime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updatetime != null">
				updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.imgurl != null">
				imgurl = #{record.imgurl,jdbcType=VARCHAR},
			</if>
			<if test="record.issee != null">
				issee = #{record.issee,jdbcType=INTEGER},
			</if>
			<if test="record.readcount != null">
				readcount = #{record.readcount,jdbcType=INTEGER},
			</if>
			<if test="record.sort != null">
				sort = #{record.sort,jdbcType=INTEGER},
			</if>
			<if test="record.familyid != null">
				familyid = #{record.familyid,jdbcType=VARCHAR},
			</if>
			<if test="record.content != null">
				content = #{record.content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update jp_usercontent
		set userid = #{record.userid,jdbcType=VARCHAR},
		createid = #{record.createid,jdbcType=VARCHAR},
		updateid =
		#{record.updateid,jdbcType=VARCHAR},
		createtime =
		#{record.createtime,jdbcType=TIMESTAMP},
		updatetime =
		#{record.updatetime,jdbcType=TIMESTAMP},
		imgurl =
		#{record.imgurl,jdbcType=VARCHAR},
		issee =
		#{record.issee,jdbcType=INTEGER},
		readcount =
		#{record.readcount,jdbcType=INTEGER},
		sort =
		#{record.sort,jdbcType=INTEGER},
		familyid =
		#{record.familyid,jdbcType=VARCHAR},
		content =
		#{record.content,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update jp_usercontent
		set userid = #{record.userid,jdbcType=VARCHAR},
		createid = #{record.createid,jdbcType=VARCHAR},
		updateid =
		#{record.updateid,jdbcType=VARCHAR},
		createtime =
		#{record.createtime,jdbcType=TIMESTAMP},
		updatetime =
		#{record.updatetime,jdbcType=TIMESTAMP},
		imgurl =
		#{record.imgurl,jdbcType=VARCHAR},
		issee =
		#{record.issee,jdbcType=INTEGER},
		readcount =
		#{record.readcount,jdbcType=INTEGER},
		sort =
		#{record.sort,jdbcType=INTEGER},
		familyid =
		#{record.familyid,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.jp.entity.Usercontent">
		update jp_usercontent
		<set>
			<if test="createid != null">
				createid = #{createid,jdbcType=VARCHAR},
			</if>
			<if test="updateid != null">
				updateid = #{updateid,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				updatetime = #{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="imgurl != null">
				imgurl = #{imgurl,jdbcType=VARCHAR},
			</if>
			<if test="issee != null">
				issee = #{issee,jdbcType=INTEGER},
			</if>
			<if test="readcount != null">
				readcount = #{readcount,jdbcType=INTEGER},
			</if>
			<if test="sort != null">
				sort = #{sort,jdbcType=INTEGER},
			</if>
			<if test="familyid != null">
				familyid = #{familyid,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where userid = #{userid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs"
		parameterType="com.jp.entity.Usercontent">
		update jp_usercontent
		set createid =
		#{createid,jdbcType=VARCHAR},
		updateid = #{updateid,jdbcType=VARCHAR},
		createtime = #{createtime,jdbcType=TIMESTAMP},
		updatetime =
		#{updatetime,jdbcType=TIMESTAMP},
		imgurl = #{imgurl,jdbcType=VARCHAR},
		issee = #{issee,jdbcType=INTEGER},
		readcount =
		#{readcount,jdbcType=INTEGER},
		sort = #{sort,jdbcType=INTEGER},
		familyid = #{familyid,jdbcType=VARCHAR},
		content =
		#{content,jdbcType=LONGVARCHAR}
		where userid =
		#{userid,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.jp.entity.Usercontent">
		update jp_usercontent
		set createid =
		#{createid,jdbcType=VARCHAR},
		updateid = #{updateid,jdbcType=VARCHAR},
		createtime = #{createtime,jdbcType=TIMESTAMP},
		updatetime =
		#{updatetime,jdbcType=TIMESTAMP},
		imgurl = #{imgurl,jdbcType=VARCHAR},
		issee = #{issee,jdbcType=INTEGER},
		readcount =
		#{readcount,jdbcType=INTEGER},
		sort = #{sort,jdbcType=INTEGER},
		familyid = #{familyid,jdbcType=VARCHAR}
		where userid =
		#{userid,jdbcType=VARCHAR}
	</update>

	<update id="batchDelete">
		delete from jp_usercontent
		where userid in
		<foreach collection="array" item="item" index="index"
			separator="," open="(" close=")">
			#{item}
		</foreach>
	</update>

	<select id="searchtUserContent" parameterType="map"
		resultType="com.jp.entity.UserContentVO">
		select
		u.username,u.userid,u.genlevel,uc.imgurl,uc.content,uc.updatetime,uc.readcount
		from jp_usercontent uc join jp_user u on uc.userid=u.userid
		WHERE
		u.`status`=0 and u.deleteflag=0 and u.isdirect=1 and uc.issee=0 and
		uc.familyid=#{familyid,jdbcType=VARCHAR}
		and uc.content like
		CONCAT("%",#{content,jdbcType=VARCHAR},"%")
		order by uc.sort asc
		,u.genlevel asc,uc.updatetime desc
		<if test="count != null">
			limit ${count}
		</if>
		<if test="start != null">
			offset ${start}
		</if>
	</select>
	<select id="searchtUserContentNew" parameterType="map"
		resultType="com.jp.entity.UserContentVO">
		select
		u.username,u.userid,u.genlevel,uc.imgurl,uc.content,uc.updatetime,uc.readcount
		from jp_usercontent uc join jp_user u on uc.userid=u.userid
		WHERE
		u.`status`=0 and u.deleteflag=0 and u.isdirect=1 and uc.issee=0 and
		uc.familyid=#{familyid,jdbcType=VARCHAR}
		<if test="username!=null">
		and u.username like
		CONCAT("%",#{username,jdbcType=VARCHAR},"%")
		</if>
		order by uc.sort asc
		,u.genlevel asc,uc.updatetime desc
		<if test="count != null">
			limit ${count}
		</if>
		<if test="start != null">
			offset ${start}
		</if>
	</select>
	<!-- 自写方法 -->

	<select id="selectUserContentList" parameterType="map"
		resultType="com.jp.entity.UserContentVO">
		select
		u.username,u.userid,u.genlevel,uc.imgurl,uc.content,uc.updatetime,uc.readcount
		from jp_usercontent uc join jp_user u on uc.userid=u.userid
		WHERE
		u.`status`=0 and u.deleteflag=0 and u.isdirect=1 and
		uc.familyid=#{familyid,jdbcType=VARCHAR}
		order by -uc.sort desc,u.genlevel  asc,uc.updatetime desc
		<if test="count != null">
			limit ${count}
		</if>
		<if test="start != null">
			offset ${start}
		</if>
	</select>

	<select id="selectUserContents" parameterType="map"
		resultType="com.jp.entity.Usercontent">
		select u.userid,uc.imgurl,u.username from jp_usercontent uc join
		jp_user u on uc.userid=u.userid
		WHERE u.`status`=0 and u.deleteflag=0
		and u.isdirect=1 and uc.issee=0 and
		uc.familyid=#{familyid,jdbcType=VARCHAR}
		order by uc.sort
		asc,u.genlevel asc,uc.updatetime desc
		<if test="count != null">
			limit ${count}
		</if>

	</select>
</mapper>